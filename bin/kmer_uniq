#!/usr/bin/env python3

import kman as km
import oligo_melting as om
import os

fasta = os.path.join("/mnt/data/COOLFISH/short.test.fa")
#fasta = os.path.join("/mnt/data/Resources/references/Grch37.r75.dna/chromosomes/",
#	"Homo_sapiens.GRCh37.75.dna.chromosome.19.fa")#

batcher = km.batch.FastaBatcher(size = 1e6, threads = 20)
batcher.do(fasta, 30)

# joiner = km.join.KJoinerThreading()
# joiner.threads = 1
# joiner.batch_size = 2
# joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.out.fa")
# joiner.mode = joiner.MODES.SEQ_COUNT
# joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.out.txt")
# joiner.mode = joiner.MODES.VEC_COUNT
# joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.out")

# joiner = km.join.KJoinerThreading()
# joiner.threads = 10
# joiner.batch_size = 2
# #joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.parallel.out.fa")
# joiner.mode = joiner.MODES.SEQ_COUNT
# joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.parallel.out.txt")
# joiner.mode = joiner.MODES.VEC_COUNT
# joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.parallel.out")

joiner = km.join.KJoinerThreading()
joiner.threads = 10
joiner.batch_size = 2
joiner.mode = joiner.MODES.VEC_COUNT_MASKED
joiner.join(batcher.collection, "/mnt/data/COOLFISH/short.test.parallel.masked_np.out")